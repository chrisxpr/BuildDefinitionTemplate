parameters: 
  webList: []
steps:
- task: DownloadPipelineArtifact@2
  inputs:
    source: 'current'
    preferTriggeringPipeline: true
    runVersion: 'latest'
    path: '$(Pipeline.Workspace)'
- ${{ each app in parameters.webList }}:  
  - task: AzureCLI@2
    displayName: Build Server IP Address
    condition: always()
    inputs:
      azureSubscription: '${{app.serviceConnection}}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        export IPADDR=$(curl -s ipinfo.io/json | jq -r '.ip')
        echo "External IP is: $IPADDR"
        echo "##vso[task.setvariable variable=BUILDIP]$IPADDR"
  - task: AzureCLI@2
    displayName: Open firewall
    condition: always()
    inputs:
      azureSubscription: '${{app.serviceConnection}}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Opening firewall: $(BUILDIP)"
        az webapp config access-restriction add -g ${{app.resourceGroup}} -n ${{app.webAppName}} --rule-name azuredevops --action Allow --ip-address "$(BUILDIP)/24" --priority 2000 --scm-site true
  - task: AzureRmWebAppDeployment@4
    displayName: 'Azure App Service Deploy: ${{app.webAppName}}'
    inputs:
      azureSubscription: '${{app.serviceConnection}}'
      appType: webAppLinux
      WebAppName: '${{app.webAppName}}'
      packageForLinux: '$(Pipeline.Workspace)/**/${{ app.packageName }}'
      ResourceGroupName: '${{app.resourceGroup}}'
      RuntimeStack: 'DOTNETCORE|3.1'
      SlotName: '${{app.slotName}}'
      DeployToSlotOrASEFlag: true
  - task: AzureCLI@2
    displayName: Add build settings
    condition: always()
    inputs:
      azureSubscription: '${{app.serviceConnection}}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Updating web app settings"
        az webapp config appsettings set -g ${{app.resourceGroup}} -n ${{app.webAppName}} --settings ASPNETCORE_ENVIRONMENT=${{app.appEnvironment}}
        az webapp config appsettings set -g ${{app.resourceGroup}} -n ${{app.webAppName}} --settings BuildNumber=$(Build.BuildNumber)
  - task: AzureCLI@2
    displayName: Close firewall
    inputs:
      azureSubscription: '${{app.serviceConnection}}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Removing $(BUILDIP)"
        az webapp config access-restriction remove -g ${{app.resourceGroup}} -n ${{app.webAppName}} --rule-name azuredevops --scm-site true